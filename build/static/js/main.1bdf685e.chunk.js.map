{"version":3,"sources":["components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Borad","props","state","xIsNext","stepNumber","history","squares","Array","fill","i","this","slice","length","setState","concat","current","className","onClick","handleClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAIqBA,E,kDACpB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,SAAS,EACTC,WAAY,EACZC,QAAQ,CACJ,CAAEC,QAASC,MAAM,GAAGC,KAAK,SANnB,E,+CAUf,SAAaC,GACT,IAAMJ,EAAUK,KAAKR,MAAMG,QAAQM,MAAM,EAAED,KAAKR,MAAME,WAAW,GAE3DE,EADUD,EAAQA,EAAQO,OAAO,GACfN,QAAQK,QAChCL,EAAQG,GAAKC,KAAKR,MAAMC,QAAS,IAAK,IACtCO,KAAKG,SAAS,CACVR,QAASA,EAAQS,OAAO,CACpBR,QAASA,IAEbH,SAAUO,KAAKR,MAAMC,QACrBC,WAAYC,EAAQO,W,oBAG5B,WAAU,IAAD,OAGCG,EADUL,KAAKR,MAAMG,QACHK,KAAKR,MAAME,YAEnC,OACI,qBAAKY,UAAU,OAAf,SACI,qBAAKA,UAAU,aAAf,SACI,cAAC,QAAD,CAAOC,QAAW,SAACR,GAAD,OAAK,EAAKS,YAAYT,IACxCH,QAASS,EAAQT,kB,GAjCFa,aCMpBC,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1bdf685e.chunk.js","sourcesContent":["import React, { Component, Board } from 'react';\r\n\r\n\r\n\r\nexport default class Borad extends Component {\r\n constructor(props){\r\n     super(props)\r\n     this.state = {\r\n         xIsNext: true,\r\n         stepNumber: 0,\r\n         history:[\r\n             { squares: Array(9).fill(null)}\r\n         ]\r\n     }\r\n }\r\n    handleClick (i){\r\n        const history = this.state.history.slice(0,this.state.stepNumber+1);\r\n        const current = history[history.length-1];\r\n        const squares = current.squares.slice();\r\n        squares[i] = this.state.xIsNext? 'x': '0';\r\n        this.setState({\r\n            history: history.concat({\r\n                squares: squares\r\n            }),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length\r\n        })\r\n    }\r\n    render() {\r\n\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n\r\n        return(\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board onClick = {(i)=>this.handleClick(i)}\r\n                    squares={current.squares}/>\r\n\r\n                </div>\r\n            \r\n       </div>\r\n        )\r\n\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <Game/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}